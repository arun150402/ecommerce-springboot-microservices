spring.application.name=order-service
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=mysql
spring.jpa.hibernate.ddl-auto=none
server.port=8091
inventory.url=http://localhost:8092
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#Actuator endpoints
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

#name difference due to restclient instance call
#instances.{clientname}

#Resilience4j properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
#no of request to process
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
#calls to make circuit open
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5
#percentage to determine failure from windowsize(i.e 50% of 10=5)
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
#Move to halfopen from open state time
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
#Max calls to allow in halfopen
#If anyof 3 fails-> open ,all 3 passes->close
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true


#Resilience4j timeout properties- Increment count for circuit breaker
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4j retry properties before timeout
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s

#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=order-placed
#Define datatype we are sending
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Schema registry running
#spring.kafka.producer.properties.schema.registry.url=http://127.0.0.8085

management.endpoints.web.exposure.include=health, info, metrics, prometheus
#Sends http metrics in form of percentiles-histogram
management.metrics.distribution.percentiles-histogram.http.server.requests=true
#All logs will have key order-service
management.observations.key-values.application=order-service
#Send 100% of traces to temp-Default is 10%
management.tracing.sampling.probability=1.0